name: Java Docker + AWS ECS & EKS CI/CD (Mocked)

on:
  push:
    branches:
      - develop
      - master

jobs:
  build:
    name: Build Java App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Rename JAR to app.jar
        run: mv target/*.jar target/app.jar

  dockerize:
    name: Build Docker Image (Mock Push to AWS ECS)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Namespace and Image Tag
        run: |
          if [ "${{ github.ref_name }}" = "master" ]; then
            echo "DEPLOY_NAMESPACE=stg" >> $GITHUB_ENV
            echo "IMAGE_TAG=java-k8s-demo-stg" >> $GITHUB_ENV
          else
            echo "DEPLOY_NAMESPACE=dev" >> $GITHUB_ENV
            echo "IMAGE_TAG=java-k8s-demo-dev" >> $GITHUB_ENV
          fi

      - name: Build Docker Image
        run: |
          docker build -t 123456789012.dkr.ecr.us-east-1.amazonaws.com/${{ env.IMAGE_TAG }}:${{ github.ref_name }} .

      - name: Mock Push to ECR
        run: |
          echo "aws ecr get-login-password | docker login --username AWS --password-stdin 123456789012.dkr.ecr.us-east-1.amazonaws.com"
          echo "docker push 123456789012.dkr.ecr.us-east-1.amazonaws.com/${{ env.IMAGE_TAG }}:${{ github.ref_name }}"

  deploy:
    name: Mock Deploy to EKS
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Set Namespace and Image Tag Again
        run: |
          if [ "${{ github.ref_name }}" = "master" ]; then
            echo "DEPLOY_NAMESPACE=stg" >> $GITHUB_ENV
            echo "IMAGE_TAG=java-k8s-demo-stg" >> $GITHUB_ENV
          else
            echo "DEPLOY_NAMESPACE=dev" >> $GITHUB_ENV
            echo "IMAGE_TAG=java-k8s-demo-dev" >> $GITHUB_ENV
          fi

      - name: Mock EKS Update Kubeconfig
        run: |
          echo "aws eks update-kubeconfig --region us-east-1 --name my-cluster"

      - name: Mock Apply Manifests
        run: |
          echo "kubectl apply -f k8s/deployment.yaml --namespace $DEPLOY_NAMESPACE"
          echo "kubectl apply -f k8s/service.yaml --namespace $DEPLOY_NAMESPACE"

      - name: Mock Rolling Update
        run: |
          echo "kubectl -n $DEPLOY_NAMESPACE set image deployment/java-k8s-demo java-app=123456789012.dkr.ecr.us-east-1.amazonaws.com/${{ env.IMAGE_TAG }}:${{ github.ref_name }}"
