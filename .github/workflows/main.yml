name: Java Docker + Kubernetes CI/CD

on:
  push:
    branches:
      - develop
      - master

jobs:
  build:
    name: Build Java App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Rename JAR to app.jar
        run: mv target/*.jar target/app.jar

  dockerize:
    name: Build, Tag, and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Namespace and Tag
        run: |
          if [ "${{ github.ref_name }}" = "master" ]; then
            echo "DEPLOY_NAMESPACE=stg" >> $GITHUB_ENV
            echo "IMAGE_TAG=java-k8s-demo-stg" >> $GITHUB_ENV
          else
            echo "DEPLOY_NAMESPACE=dev" >> $GITHUB_ENV
            echo "IMAGE_TAG=java-k8s-demo-dev" >> $GITHUB_ENV
          fi

      - name: Build Docker Image
        run: docker build -t ghcr.io/loayghreep/${{ env.IMAGE_TAG }}:${{ github.ref_name }} .

      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker Image
        run: docker push ghcr.io/loayghreep/${{ env.IMAGE_TAG }}:${{ github.ref_name }}

  deploy:
    name: Simulate Deploy to EKS
    runs-on: ubuntu-latest
    needs: dockerize
    steps:
      - name: Set Namespace and Tag Again
        run: |
          if [ "${{ github.ref_name }}" = "master" ]; then
            echo "DEPLOY_NAMESPACE=stg" >> $GITHUB_ENV
            echo "IMAGE_TAG=java-k8s-demo-stg" >> $GITHUB_ENV
          else
            echo "DEPLOY_NAMESPACE=dev" >> $GITHUB_ENV
            echo "IMAGE_TAG=java-k8s-demo-dev" >> $GITHUB_ENV
          fi

      - name: Simulate aws eks update-kubeconfig
        run: |
          echo "aws eks update-kubeconfig --region us-east-1 --name my-cluster"

      - name: Simulate Apply Manifests with Dynamic Namespace
        run: |
          sed "s/NS_ENV/${{ env.DEPLOY_NAMESPACE }}/g" k8s/deployment.yaml | tee k8s/_deployment.yaml | kubectl apply -f -
          sed "s/NS_ENV/${{ env.DEPLOY_NAMESPACE }}/g" k8s/service.yaml | tee k8s/_service.yaml | kubectl apply -f -

      - name: Simulate Rolling Update
        run: |
          echo "kubectl -n $DEPLOY_NAMESPACE set image deployment/java-k8s-demo java-app=ghcr.io/loayghreep/${{ env.IMAGE_TAG }}:${{ github.ref_name }}"
